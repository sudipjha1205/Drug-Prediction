
//importing necessary libraries 

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import pylab as pl
%matplotlib inline

//Downloading the dataset as csv file//
!wget -O DecisionTree.csv https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMDeveloperSkillsNetwork-ML0101EN-SkillsNetwork/labs/Module%203/data/drug200.csv

//Reading the csv file using pandas
df = pd.read_csv("DecisionTree.csv",delimiter=",")
df.head()         //shows top 5 rows 

df.describe()       //describes the dataframe

//converting the dataset into dependent and independent variable
X = df[['Age','Sex','BP','Cholesterol','Na_to_K']].values      //independent variable
y = df['Drug']        //dependent variable


//converting all the non-numerical attributes of the dataframe into numerical attribute and showing the top 5 rows.//

from sklearn import preprocessing

le_sex = preprocessing.LabelEncoder()
le_sex.fit(['F','M'])
X[:,1] = le_sex.transform(X[:,1]) 

le_BP = preprocessing.LabelEncoder()
le_BP.fit([ 'LOW', 'NORMAL', 'HIGH'])
X[:,2] = le_BP.transform(X[:,2])

le_Chol = preprocessing.LabelEncoder()
le_Chol.fit([ 'NORMAL', 'HIGH'])
X[:,3] = le_Chol.transform(X[:,3])

cdf[:5]

//creating a train and test set//

from sklearn.model_selection import train_test_split
train_x,test_x,train_y,test_y = train_test_split(cdf,y,test_size = 0.3,shuffle = 4,random_state = 3)


//creating the model and predicting the values

from sklearn.tree import DecisionTreeClassifier
from sklearn import metrics

regr = DecisionTreeClassifier(criterion = "entropy",max_depth = 4)
train_y_ = regr.fit(train_x,train_y)
test_y_ = regr.predict(test_x)

print(metrics.accuracy_score(train_y,regr.predict(train_x)))     //1.0000000
print(metrics.accuracy_score(test_y,test_y_))                //0.9888888
